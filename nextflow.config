params {
    //gpu related params
    containerOptions = '--gpus all'
    accelerator  = 'nvidia-tesla-p100'
    n_accelerators = 1
    with_gpus_process_cpus = 4
    with_gpus_process_memory = '32.GB'

    // configuration for profiles
    config = 'conf/standard.config'
    executor = false
    gls_bootDiskSize = '50.GB'
    gls_preemptible = true
    zone = 'us-east1-b'
    network = 'jax-cloudos-shengli-vpc'
    subnetwork =  'cloudos-subnet'
    queueSize = 200

	// input params
    dsname = 'DEMODATA'
    runid = "DEMODATA_RRBS"
//    input = 'test_data/demo.fast5.reads.tar.gz'

	input = 'https://github.com/liuyangzzu/nano-compare/blob/master/test_data/demo.fast5.reads.tar.gz'
    isfile = true
    ntask = 10

    bgtruth="bismark:/a/b/c.gz;/a/b/c.gz;"
    bgtruth_cov=5 //using bgtruth in BS-seq data with coverage >= X in read/site level analysis
    tool_cov=3  //For site level evaluation, we only select sites from tools with read coverage >= X


    benchmarking=false // if running benchmarking fig. 7
    debug=false // true if only debug purpose
	eval=false // if perform evaluations after callings

	// true if only run top3 performers: DeepSignal, Nanopolish and Megalodon
    top3=false

    runDeepMod=true

    processors=8

	// Used for DeepSignal gpu support
    isgpu = 'no'

	// Resquiggle specifications
    correctedGroup="RawGenomeCorrected_000"

	// Guppy model specificatoins

	//This model is the Guppy basecall used model
	GUPPY_BASECALL_MODEL="dna_r9.4.1_450bps_hac.cfg"

	GuppyGPUOptions="--gpu_runners_per_device 8 --device auto"

	//This model is suggested the best for Megalodon
	MEGALODON_MODEL_FOR_GUPPY_CONFIG="res_dna_r941_min_modbases_5mC_v001.cfg"


	GUPPY_TIMEOUT = 240
	READS_PER_GUPPY_BATCH = 100

	SAMTOOLS_PATH="samtools"

	// DeepMod model specifications
    deepModModel="rnn_conmodC_P100wd21_f7ne1u0_4/mod_train_conmodC_P100wd21_f3ne1u0"
    clusterDeepModModel="na12878_cluster_train_mod-keep_prob0.7-nb25-chr1/Cg.cov5.nb25"

    chromSizesFile="hg38.chrom.sizes"

	//Input used by pipeline, located in zenodo
	zenodoNumber="4713852"
	params.deepmod_ctar = "https://zenodo.org/record/${zenodoNumber}/files/C.tar.gz"
	params.genome_annotation_tar = "https://zenodo.org/record/${zenodoNumber}/files/genome-annotation.tar.gz"
	params.hg38_tar = "https://zenodo.org/record/${zenodoNumber}/files/hg38.tar.gz"
	params.deepsignel_model_tar = "https://zenodo.org/record/${zenodoNumber}/files/model.CpG.R9.4_1D.human_hx1.bn17.sn360.v0.1.7%2B.tar.gz"
	params.megalodon_model_tar = "https://zenodo.org/record/${zenodoNumber}/files/megalodon_model.tar.gz"

	// If no config file is present to params
	dsname = 'NA12878'
//	input = 'http://s3.amazonaws.com/nanopore-human-wgs/rel3-fast5-chr20.part05.tar'
    input = 'https://github.com/liuyangzzu/nano-compare/raw/6684b71587c19d191ccf87832f25536be10e372f/test_data/demo.fast5.reads.tar.gz'
	online = true
}

// Running on different platforms
profiles {
	
    standard { includeConfig params.config }

    winter { // run on HPC winter
        process.conda='/home/liuya/anaconda3/envs/nanocompare'
        process.executor='slurm'
        process.queue='gpu'
        process.clusterOptions='-q inference -n 8 --gres=gpu:1 --time=06:00:00 --mem-per-cpu=170G'
        process.cache = 'lenient'

		// Guppy gpu dir
		params.GuppyDir="/projects/li-lab/software/ont-guppy-gpu_4.2.2"
        params.GuppyGPUOptions="--gpu_runners_per_device 8 --device auto"
        params.isgpu = 'yes'

        // Input dir used in hpc
        includeConfig 'conf/hpc.config'
    }

    sumner { // run on HPC sumner with CPU support
        process.conda='/home/liuya/anaconda3/envs/nanocompare'
        executor.name ='slurm'
        process.clusterOptions='-q batch -n 8 --time=2-06:00:00 --mem-per-cpu=270G'
        process.cache = 'lenient'

		// Guppy cpu dir
        params.GuppyDir="/projects/li-lab/software/ont-guppy-cpu_4.2.2"
        params.GuppyGPUOptions=""

        // Input dir used in hpc
        includeConfig 'conf/hpc.config'
    }



    test  {
        includeConfig 'conf/test.config'
    }
    benchmarking {
        includeConfig 'conf/benchmarking.config'
    }
}

executor {
    name = params.executor
    queueSize = params.queueSize
}

manifest {
    homePage = 'http://epinano.jax.org'
    description = 'Pipeline for nanome evaluation for nanopore sequencing'
    mainScript = 'main.nf'
    version = '1.0.0'
}

trace {
    enabled = true
    file = 'nanome.pipeline_trace.txt'
    //fields = 'task_id,name,status,exit,realtime,%cpu,rss'
}
